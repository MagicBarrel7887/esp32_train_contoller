<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="dd/dfc/_interpolation__math_8h" kind="file" language="C++">
    <compoundname>Interpolation_math.h</compoundname>
    <includes local="yes">WProgram.h</includes>
    <incdepgraph>
      <node id="1">
        <label>include/Interpolation_math.h</label>
        <link refid="dd/dfc/_interpolation__math_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>WProgram.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="de/dfc/class_interpolation" prot="public">Interpolation</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#if<sp/>defined(ARDUINO)<sp/>&amp;&amp;<sp/>ARDUINO<sp/>&gt;=<sp/>100</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Arduino.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;WProgram.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7" refid="de/dfc/class_interpolation" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="de/dfc/class_interpolation" kindref="compound">Interpolation</ref></highlight></codeline>
<codeline lineno="8"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="de/dfc/class_interpolation_ae5bdbf879f8568c88ff4d8d5ae54357c_1ae5bdbf879f8568c88ff4d8d5ae54357c" kindref="member">Step</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xValues[],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>yValues[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numValues,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pointX,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>threshold<sp/>=<sp/>1);</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="de/dfc/class_interpolation_a003aef64b63497adfe6dd88788a4abc8_1a003aef64b63497adfe6dd88788a4abc8" kindref="member">Linear</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xValues[],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>yValues[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numValues,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pointX,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>trim<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="de/dfc/class_interpolation_a6430dfeab482b928613b57808101ceed_1a6430dfeab482b928613b57808101ceed" kindref="member">SmoothStep</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xValues[],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>yValues[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numValues,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pointX,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>trim<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="de/dfc/class_interpolation_a7fa0e414096246711d2e33be767b667a_1a7fa0e414096246711d2e33be767b667a" kindref="member">CatmullSpline</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xValues[],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>yValues[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numValues,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pointX,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>trim<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="de/dfc/class_interpolation_a6ae8fb5c62336c87a9846e974a497517_1a6ae8fb5c62336c87a9846e974a497517" kindref="member">catmullSlope</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x[],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="de/dfc/class_interpolation_a89144a3927a624028d02cd893f4e0397_1a89144a3927a624028d02cd893f4e0397" kindref="member">ConstrainedSpline</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xValues[],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>yValues[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numValues,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pointX,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>trim<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="de/dfc/class_interpolation_a36f4400531624376af08f580032288fe_1a36f4400531624376af08f580032288fe" kindref="member">getFirstDerivate</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x[],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="de/dfc/class_interpolation_afd5c272f7dcb67b4c4daafa9a7d213f4_1afd5c272f7dcb67b4c4daafa9a7d213f4" kindref="member">getLeftSecondDerivate</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x[],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="de/dfc/class_interpolation_a38c127b5ba304d2fb91bdcd4f7ab5966_1a38c127b5ba304d2fb91bdcd4f7ab5966" kindref="member">getRightSecondDerivate</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x[],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numValues,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i);</highlight></codeline>
<codeline lineno="21"><highlight class="normal">};</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="de/dfc/class_interpolation_ae5bdbf879f8568c88ff4d8d5ae54357c_1ae5bdbf879f8568c88ff4d8d5ae54357c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="de/dfc/class_interpolation_ae5bdbf879f8568c88ff4d8d5ae54357c_1ae5bdbf879f8568c88ff4d8d5ae54357c" kindref="member">Interpolation::Step</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xValues[],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>yValues[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numValues,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pointX,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>threshold<sp/>)</highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>extremos</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pointX<sp/>&lt;=<sp/>xValues[0])</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>yValues[0];</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pointX<sp/>&gt;=<sp/>xValues[numValues<sp/>-<sp/>1])</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>yValues[numValues<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(pointX<sp/>&gt;=<sp/>xValues[i<sp/>+<sp/>1])</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pointX<sp/>==<sp/>xValues[i<sp/>+<sp/>1])</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>yValues[i<sp/>+<sp/>1];<sp/></highlight><highlight class="comment">//<sp/>coincidencia<sp/>exacta</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>(pointX<sp/>-<sp/>xValues[i])<sp/>/<sp/>(xValues[i<sp/>+<sp/>1]<sp/>-<sp/>xValues[i]);<sp/></highlight><highlight class="comment">//<sp/>punto<sp/>relativo<sp/>en<sp/>el<sp/>intervalo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>t<sp/>&lt;<sp/>threshold<sp/>?<sp/>yValues[i]<sp/>:<sp/>yValues[i<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="de/dfc/class_interpolation_a003aef64b63497adfe6dd88788a4abc8_1a003aef64b63497adfe6dd88788a4abc8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="de/dfc/class_interpolation_a003aef64b63497adfe6dd88788a4abc8_1a003aef64b63497adfe6dd88788a4abc8" kindref="member">Interpolation::Linear</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xValues[],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>yValues[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numValues,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pointX,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>trim<sp/>)</highlight></codeline>
<codeline lineno="43"><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(trim)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pointX<sp/>&lt;=<sp/>xValues[0])</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>yValues[0];</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pointX<sp/>&gt;=<sp/>xValues[numValues<sp/>-<sp/>1])</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>yValues[numValues<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rst<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pointX<sp/>&lt;=<sp/>xValues[0])</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>(pointX<sp/>-<sp/>xValues[i])<sp/>/<sp/>(xValues[i<sp/>+<sp/>1]<sp/>-<sp/>xValues[i]);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rst<sp/>=<sp/>yValues[i]<sp/>*<sp/>(1<sp/>-<sp/>t)<sp/>+<sp/>yValues[i<sp/>+<sp/>1]<sp/>*<sp/>t;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pointX<sp/>&gt;=<sp/>xValues[numValues<sp/>-<sp/>1])</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>(pointX<sp/>-<sp/>xValues[numValues<sp/>-<sp/>2])<sp/>/<sp/>(xValues[numValues<sp/>-<sp/>1]<sp/>-<sp/>xValues[numValues<sp/>-<sp/>2]);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rst<sp/>=<sp/>yValues[numValues<sp/>-<sp/>2]<sp/>*<sp/>(1<sp/>-<sp/>t)<sp/>+<sp/>yValues[numValues<sp/>-<sp/>1]<sp/>*<sp/>t;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(pointX<sp/>&gt;=<sp/>xValues[i<sp/>+<sp/>1])</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>(pointX<sp/>-<sp/>xValues[i])<sp/>/<sp/>(xValues[i<sp/>+<sp/>1]<sp/>-<sp/>xValues[i]);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rst<sp/>=<sp/>yValues[i]<sp/>*<sp/>(1<sp/>-<sp/>t)<sp/>+<sp/>yValues[i<sp/>+<sp/>1]<sp/>*<sp/>t;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rst;</highlight></codeline>
<codeline lineno="74"><highlight class="normal">}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="de/dfc/class_interpolation_a6430dfeab482b928613b57808101ceed_1a6430dfeab482b928613b57808101ceed" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="de/dfc/class_interpolation_a6430dfeab482b928613b57808101ceed_1a6430dfeab482b928613b57808101ceed" kindref="member">Interpolation::SmoothStep</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xValues[],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>yValues[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numValues,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pointX,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>trim<sp/>)</highlight></codeline>
<codeline lineno="77"><highlight class="normal">{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(trim)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pointX<sp/>&lt;=<sp/>xValues[0])</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>yValues[0];</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pointX<sp/>&gt;=<sp/>xValues[numValues<sp/>-<sp/>1])</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>yValues[numValues<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pointX<sp/>&lt;=<sp/>xValues[0])</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pointX<sp/>&gt;=<sp/>xValues[numValues<sp/>-<sp/>1])</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>numValues<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(pointX<sp/>&gt;=<sp/>xValues[i<sp/>+<sp/>1])</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pointX<sp/>==<sp/>xValues[i<sp/>+<sp/>1])</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>yValues[i<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>(pointX<sp/>-<sp/>xValues[i])<sp/>/<sp/>(xValues[i<sp/>+<sp/>1]<sp/>-<sp/>xValues[i]);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>=<sp/>t<sp/>*<sp/>t<sp/>*<sp/>(3<sp/>-<sp/>2<sp/>*<sp/>t);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>yValues[i]<sp/>*<sp/>(1<sp/>-<sp/>t)<sp/>+<sp/>yValues[i<sp/>+<sp/>1]<sp/>*<sp/>t;</highlight></codeline>
<codeline lineno="100"><highlight class="normal">}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="de/dfc/class_interpolation_a7fa0e414096246711d2e33be767b667a_1a7fa0e414096246711d2e33be767b667a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="de/dfc/class_interpolation_a7fa0e414096246711d2e33be767b667a_1a7fa0e414096246711d2e33be767b667a" kindref="member">Interpolation::CatmullSpline</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xValues[],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>yValues[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numValues,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pointX,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>trim<sp/>)</highlight></codeline>
<codeline lineno="103"><highlight class="normal">{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(trim)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pointX<sp/>&lt;=<sp/>xValues[0])</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>yValues[0];</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pointX<sp/>&gt;=<sp/>xValues[numValues<sp/>-<sp/>1])</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>yValues[numValues<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pointX<sp/>&lt;=<sp/>xValues[0])</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pointX<sp/>&gt;=<sp/>xValues[numValues<sp/>-<sp/>1])</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>numValues<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(pointX<sp/>&gt;=<sp/>xValues[i<sp/>+<sp/>1])</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pointX<sp/>==<sp/>xValues[i<sp/>+<sp/>1])</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>yValues[i<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>(pointX<sp/>-<sp/>xValues[i])<sp/>/<sp/>(xValues[i<sp/>+<sp/>1]<sp/>-<sp/>xValues[i]);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>t_2<sp/>=<sp/>t<sp/>*<sp/>t;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>t_3<sp/>=<sp/>t_2<sp/>*<sp/>t;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>h00<sp/>=<sp/>2<sp/>*<sp/>t_3<sp/>-<sp/>3<sp/>*<sp/>t_2<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>h10<sp/>=<sp/>t_3<sp/>-<sp/>2<sp/>*<sp/>t_2<sp/>+<sp/>t;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>h01<sp/>=<sp/>3<sp/>*<sp/>t_2<sp/>-<sp/>2<sp/>*<sp/>t_3;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>h11<sp/>=<sp/>t_3<sp/>-<sp/>t_2;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>x0<sp/>=<sp/>xValues[i];</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>x1<sp/>=<sp/>xValues[i<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>y0<sp/>=<sp/>yValues[i];</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>y1<sp/>=<sp/>yValues[i<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m0;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m1;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m0<sp/>=<sp/>(yValues[1]<sp/>-<sp/>yValues[0])<sp/>/<sp/>(xValues[1]<sp/>-<sp/>xValues[0]);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m1<sp/>=<sp/>(yValues[2]<sp/>-<sp/>yValues[0])<sp/>/<sp/>(xValues[2]<sp/>-<sp/>xValues[0]);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>numValues<sp/>-<sp/>2)</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m0<sp/>=<sp/>(yValues[numValues<sp/>-<sp/>1]<sp/>-<sp/>yValues[numValues<sp/>-<sp/>3])<sp/>/<sp/>(xValues[numValues<sp/>-<sp/>1]<sp/>-<sp/>xValues[numValues<sp/>-<sp/>3]);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m1<sp/>=<sp/>(yValues[numValues<sp/>-<sp/>1]<sp/>-<sp/>yValues[numValues<sp/>-<sp/>2])<sp/>/<sp/>(xValues[numValues<sp/>-<sp/>1]<sp/>-<sp/>xValues[numValues<sp/>-<sp/>2]);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m0<sp/>=<sp/><ref refid="de/dfc/class_interpolation_a6ae8fb5c62336c87a9846e974a497517_1a6ae8fb5c62336c87a9846e974a497517" kindref="member">catmullSlope</ref>(xValues,<sp/>yValues,<sp/>numValues,<sp/>i);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m1<sp/>=<sp/><ref refid="de/dfc/class_interpolation_a6ae8fb5c62336c87a9846e974a497517_1a6ae8fb5c62336c87a9846e974a497517" kindref="member">catmullSlope</ref>(xValues,<sp/>yValues,<sp/>numValues,<sp/>i<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rst<sp/>=<sp/>h00<sp/>*<sp/>y0<sp/>+<sp/>h01<sp/>*<sp/>y1<sp/>+<sp/>h10<sp/>*<sp/>(x1<sp/>-<sp/>x0)<sp/>*<sp/>m0<sp/>+<sp/>h11<sp/>*<sp/>(x1<sp/>-<sp/>x0)<sp/>*<sp/>m1;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rst;</highlight></codeline>
<codeline lineno="157"><highlight class="normal">}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159" refid="de/dfc/class_interpolation_a6ae8fb5c62336c87a9846e974a497517_1a6ae8fb5c62336c87a9846e974a497517" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="de/dfc/class_interpolation_a6ae8fb5c62336c87a9846e974a497517_1a6ae8fb5c62336c87a9846e974a497517" kindref="member">Interpolation::catmullSlope</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x[],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)</highlight></codeline>
<codeline lineno="160"><highlight class="normal">{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x[i<sp/>+<sp/>1]<sp/>==<sp/>x[i<sp/>-<sp/>1])</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(y[i<sp/>+<sp/>1]<sp/>-<sp/>y[i<sp/>-<sp/>1])<sp/>/<sp/>(x[i<sp/>+<sp/>1]<sp/>-<sp/>x[i<sp/>-<sp/>1]);</highlight></codeline>
<codeline lineno="164"><highlight class="normal">}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166" refid="de/dfc/class_interpolation_a89144a3927a624028d02cd893f4e0397_1a89144a3927a624028d02cd893f4e0397" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="de/dfc/class_interpolation_a89144a3927a624028d02cd893f4e0397_1a89144a3927a624028d02cd893f4e0397" kindref="member">Interpolation::ConstrainedSpline</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xValues[],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>yValues[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numValues,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>pointX,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>trim<sp/>)</highlight></codeline>
<codeline lineno="167"><highlight class="normal">{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(trim)</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pointX<sp/>&lt;=<sp/>xValues[0])</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>yValues[0];</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pointX<sp/>&gt;=<sp/>xValues[numValues<sp/>-<sp/>1])</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>yValues[numValues<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//auto<sp/>i<sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//while<sp/>(pointX<sp/>&gt;=<sp/>xValues[i<sp/>+<sp/>1])<sp/>i++;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(pointX<sp/>==<sp/>xValues[i<sp/>+<sp/>1])<sp/>return<sp/>yValues[i<sp/>+<sp/>1];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pointX<sp/>&lt;=<sp/>xValues[0])</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pointX<sp/>&gt;=<sp/>xValues[numValues<sp/>-<sp/>1])</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>numValues<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(pointX<sp/>&gt;=<sp/>xValues[i<sp/>+<sp/>1])</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pointX<sp/>==<sp/>xValues[i<sp/>+<sp/>1])</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>yValues[i<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>x0<sp/>=<sp/>xValues[i<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>x1<sp/>=<sp/>xValues[i];</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>y0<sp/>=<sp/>yValues[i<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>y1<sp/>=<sp/>yValues[i];</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fd2i_xl1<sp/>=<sp/><ref refid="de/dfc/class_interpolation_afd5c272f7dcb67b4c4daafa9a7d213f4_1afd5c272f7dcb67b4c4daafa9a7d213f4" kindref="member">getLeftSecondDerivate</ref>(xValues,<sp/>yValues,<sp/>numValues<sp/>-<sp/>1,<sp/>i<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fd2i_x<sp/>=<sp/><ref refid="de/dfc/class_interpolation_a38c127b5ba304d2fb91bdcd4f7ab5966_1a38c127b5ba304d2fb91bdcd4f7ab5966" kindref="member">getRightSecondDerivate</ref>(xValues,<sp/>yValues,<sp/>numValues<sp/>-<sp/>1,<sp/>i<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>d<sp/>=<sp/>(fd2i_x<sp/>-<sp/>fd2i_xl1)<sp/>/<sp/>(6.0f<sp/>*<sp/>(x0<sp/>-<sp/>x1));</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>(x0<sp/>*<sp/>fd2i_xl1<sp/>-<sp/>x1<sp/>*<sp/>fd2i_x)<sp/>/<sp/>2.0f<sp/>/<sp/>(x0<sp/>-<sp/>x1);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>b<sp/>=<sp/>(y0<sp/>-<sp/>y1<sp/>-<sp/>c<sp/>*<sp/>(x0<sp/>*<sp/>x0<sp/>-<sp/>x1<sp/>*<sp/>x1)<sp/>-<sp/>d<sp/>*<sp/>(x0<sp/>*<sp/>x0<sp/>*<sp/>x0<sp/>-<sp/>x1<sp/>*<sp/>x1<sp/>*<sp/>x1))<sp/>/<sp/>(x0<sp/>-<sp/>x1);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>a<sp/>=<sp/>y1<sp/>-<sp/>b<sp/>*<sp/>x1<sp/>-<sp/>c<sp/>*<sp/>x1<sp/>*<sp/>x1<sp/>-<sp/>d<sp/>*<sp/>x1<sp/>*<sp/>x1<sp/>*<sp/>x1;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>rst<sp/>=<sp/>a<sp/>+<sp/>pointX<sp/>*<sp/>(b<sp/>+<sp/>pointX<sp/>*<sp/>(c<sp/>+<sp/>pointX<sp/>*<sp/>d));</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rst;</highlight></codeline>
<codeline lineno="206"><highlight class="normal">}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208" refid="de/dfc/class_interpolation_a36f4400531624376af08f580032288fe_1a36f4400531624376af08f580032288fe" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="de/dfc/class_interpolation_a36f4400531624376af08f580032288fe_1a36f4400531624376af08f580032288fe" kindref="member">Interpolation::getFirstDerivate</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x[],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)</highlight></codeline>
<codeline lineno="209"><highlight class="normal">{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fd1_x;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fd1_x<sp/>=<sp/>3.0f<sp/>/<sp/>2.0f<sp/>*<sp/>(y[1]<sp/>-<sp/>y[0])<sp/>/<sp/>(x[1]<sp/>-<sp/>x[0]);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fd1_x<sp/>-=<sp/><ref refid="de/dfc/class_interpolation_a36f4400531624376af08f580032288fe_1a36f4400531624376af08f580032288fe" kindref="member">getFirstDerivate</ref>(x,<sp/>y,<sp/>n,<sp/>1)<sp/>/<sp/>2.0f;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>n)</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fd1_x<sp/>=<sp/>3.0f<sp/>/<sp/>2.0f<sp/>*<sp/>(y[n]<sp/>-<sp/>y[n<sp/>-<sp/>1])<sp/>/<sp/>(x[n]<sp/>-<sp/>x[n<sp/>-<sp/>1]);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fd1_x<sp/>-=<sp/><ref refid="de/dfc/class_interpolation_a36f4400531624376af08f580032288fe_1a36f4400531624376af08f580032288fe" kindref="member">getFirstDerivate</ref>(x,<sp/>y,<sp/>n,<sp/>n<sp/>-<sp/>1)<sp/>/<sp/>2.0f;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((x[i<sp/>+<sp/>1]<sp/>-<sp/>x[i])<sp/>/<sp/>(y[i<sp/>+<sp/>1]<sp/>-<sp/>y[i])<sp/>*<sp/>(x[i]<sp/>-<sp/>x[i<sp/>-<sp/>1])<sp/>/<sp/>(y[i]<sp/>-<sp/>y[i<sp/>-<sp/>1])<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fd1_x<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fd1_x<sp/>=<sp/>2.0f<sp/>/<sp/>((x[i<sp/>+<sp/>1]<sp/>-<sp/>x[i])<sp/>/<sp/>(y[i<sp/>+<sp/>1]<sp/>-<sp/>y[i])<sp/>+<sp/>(x[i]<sp/>-<sp/>x[i<sp/>-<sp/>1])<sp/>/<sp/>(y[i]<sp/>-<sp/>y[i<sp/>-<sp/>1]));</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fd1_x;</highlight></codeline>
<codeline lineno="234"><highlight class="normal">}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236" refid="de/dfc/class_interpolation_afd5c272f7dcb67b4c4daafa9a7d213f4_1afd5c272f7dcb67b4c4daafa9a7d213f4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="de/dfc/class_interpolation_afd5c272f7dcb67b4c4daafa9a7d213f4_1afd5c272f7dcb67b4c4daafa9a7d213f4" kindref="member">Interpolation::getLeftSecondDerivate</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x[],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)</highlight></codeline>
<codeline lineno="237"><highlight class="normal">{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fdi_x<sp/>=<sp/><ref refid="de/dfc/class_interpolation_a36f4400531624376af08f580032288fe_1a36f4400531624376af08f580032288fe" kindref="member">getFirstDerivate</ref>(x,<sp/>y,<sp/>n,<sp/>i);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fdi_xl1<sp/>=<sp/><ref refid="de/dfc/class_interpolation_a36f4400531624376af08f580032288fe_1a36f4400531624376af08f580032288fe" kindref="member">getFirstDerivate</ref>(x,<sp/>y,<sp/>n,<sp/>i<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fd2l_x<sp/>=<sp/>-2.0f<sp/>*<sp/>(fdi_x<sp/>+<sp/>2.0f<sp/>*<sp/>fdi_xl1)<sp/>/<sp/>(x[i]<sp/>-<sp/>x[i<sp/>-<sp/>1]);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>fd2l_x<sp/>+=<sp/>6.0f<sp/>*<sp/>(y[i]<sp/>-<sp/>y[i<sp/>-<sp/>1])<sp/>/<sp/>(x[i]<sp/>-<sp/>x[i<sp/>-<sp/>1])<sp/>/<sp/>(x[i]<sp/>-<sp/>x[i<sp/>-<sp/>1]);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fd2l_x;</highlight></codeline>
<codeline lineno="245"><highlight class="normal">}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247" refid="de/dfc/class_interpolation_a38c127b5ba304d2fb91bdcd4f7ab5966_1a38c127b5ba304d2fb91bdcd4f7ab5966" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="de/dfc/class_interpolation_a38c127b5ba304d2fb91bdcd4f7ab5966_1a38c127b5ba304d2fb91bdcd4f7ab5966" kindref="member">Interpolation::getRightSecondDerivate</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x[],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numValues,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)</highlight></codeline>
<codeline lineno="248"><highlight class="normal">{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fdi_x<sp/>=<sp/><ref refid="de/dfc/class_interpolation_a36f4400531624376af08f580032288fe_1a36f4400531624376af08f580032288fe" kindref="member">getFirstDerivate</ref>(x,<sp/>y,<sp/>numValues,<sp/>i);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fdi_xl1<sp/>=<sp/><ref refid="de/dfc/class_interpolation_a36f4400531624376af08f580032288fe_1a36f4400531624376af08f580032288fe" kindref="member">getFirstDerivate</ref>(x,<sp/>y,<sp/>numValues,<sp/>i<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>fd2r_x<sp/>=<sp/>2.0f<sp/>*<sp/>(2.0f<sp/>*<sp/>fdi_x<sp/>+<sp/>fdi_xl1)<sp/>/<sp/>(x[i]<sp/>-<sp/>x[i<sp/>-<sp/>1]);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>fd2r_x<sp/>-=<sp/>6.0f<sp/>*<sp/>(y[i]<sp/>-<sp/>y[i<sp/>-<sp/>1])<sp/>/<sp/>(x[i]<sp/>-<sp/>x[i<sp/>-<sp/>1])<sp/>/<sp/>(x[i]<sp/>-<sp/>x[i<sp/>-<sp/>1]);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fd2r_x;</highlight></codeline>
<codeline lineno="256"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="include/Interpolation_math.h"/>
  </compounddef>
</doxygen>
